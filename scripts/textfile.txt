import * as React from 'react';

import { Socket } from './Socket';

export class MessageForm extends React.Component {
    handleSubmit(event) {
        event.preventDefault();
    
        // this is a local variable so we don't need to initialize in the constructor
        let random = Math.floor(Math.random() * 100);
        console.log('Generated a random number: ', random);
        Socket.emit('new number', {
            'number': random,
        });
        console.log('Sent a random number to server!');
    }

    render() {
        return (
            
            
                    <div id='bodybox'>
          <div id='chatborder'>
            <p id="chatlog7" class="chatlog">&nbsp;</p>
            <p id="chatlog6" class="chatlog">&nbsp;</p>
            <p id="chatlog5" class="chatlog">&nbsp;</p>
            <p id="chatlog4" class="chatlog">&nbsp;</p>
            <p id="chatlog3" class="chatlog">&nbsp;</p>
            <p id="chatlog2" class="chatlog">&nbsp;</p>
            <p id="chatlog1" class="chatlog">&nbsp;</p>
            
            <form onSubmit={this.handleSubmit}>
                  Message:<br>
                  <input type="text" name="chat" id="chatbox"/>
                  <input type="submit" value="Submit" />
            </form>
            
            
            
         
          </div>
          <br>
 
            <form onSubmit={this.handleSubmit}>
                <button>Send up a random number!</button>
            </form>
        );
    }
}



constructor(props) {
    super(props);
    this.state = {value: ''};

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
    this.setState({value: event.target.value});
  }

  handleSubmit(event) {
    alert('A name was submitted: ' + this.state.value);
    event.preventDefault();
  }

  render() {
    return (
      <form onSubmit={this.handleSubmit}>
        <label>
          Name:
          <input type="text" value={this.state.value} onChange={this.handleChange} />
        </label>
        <input type="submit" value="Submit" />
      </form>
    );
  }